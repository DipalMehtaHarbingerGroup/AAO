using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web;
using System.Web.Http.Filters;
using Serilog;

namespace AAO.WebAPI.BCSCSelfAssessment.ExceptionFilter
{
    public class CustomExceptionFilter : ExceptionFilterAttribute
    {
        public string sAttrLogPath = ConfigurationManager.AppSettings.Get("LogfilePath");
        public override void OnException(HttpActionExecutedContext actionExecutedContext)
        {
            var log = new Serilog.LoggerConfiguration().WriteTo.RollingFile(this.sAttrLogPath, shared: true, retainedFileCountLimit: 7).CreateLogger();           
            HttpStatusCode status = HttpStatusCode.InternalServerError;
            String message = String.Empty;
            String exceptionGeneratedbySystem = String.Empty;
            exceptionGeneratedbySystem = actionExecutedContext.Exception.Message.ToString();
            var exceptionType = actionExecutedContext.Exception.GetType();
            if (exceptionType == typeof(UnauthorizedAccessException))
            {
                message = "Access to the Web API is not authorized.";
                status = HttpStatusCode.Unauthorized;
            }
            else if (exceptionType == typeof(DivideByZeroException))
            {
                message = "Internal Server Error.";
                status = HttpStatusCode.InternalServerError;
            }
            else
            {
                message = "Not found.";
                status = HttpStatusCode.NotFound;
            }
            actionExecutedContext.Response = new HttpResponseMessage()
            {
                Content = new StringContent(message, System.Text.Encoding.UTF8, "text/plain"),
                StatusCode = status
            };
            base.OnException(actionExecutedContext);
            log.Information("Exception Message: "+ exceptionGeneratedbySystem);
            log.Information("Error Generated by System: " + exceptionType);

        }
    }
}